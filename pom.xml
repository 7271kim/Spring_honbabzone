<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.honbabzone</groupId>
    <artifactId>honbabzone</artifactId>
    <name>honbabzone</name>
    <packaging>war</packaging>
    <version>1.0.0-BUILD-SNAPSHOT</version>
    <properties>
        <java-version>1.8</java-version>
        <org.springframework-version>3.1.1.RELEASE</org.springframework-version>
        <org.aspectj-version>1.6.10</org.aspectj-version>
        <org.slf4j-version>1.6.6</org.slf4j-version>
    </properties>
    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework-version}</version>
            <exclusions>
                <!-- Exclude Commons Logging in favor of SLF4j -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                 </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
                
        <!-- AspectJ -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${org.aspectj-version}</version>
        </dependency>    
        
        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j-version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${org.slf4j-version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${org.slf4j-version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
    
        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.7</version>
            <scope>test</scope>
        </dependency>        
        
        <!-- log4jdbc -->
        <!-- 기존 : WEB-INF->lib폴더 생성 -> log4jdbc4-1.2 옮기기-> 프로젝트 우클릭 -> proerties -> java Build -> Add Library -> Web app library 방금받은 라이프러리를 넣어줌 -->
        <dependency>
            <groupId>com.googlecode.log4jdbc</groupId>
            <artifactId>log4jdbc</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.15</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
            </exclusions>
            <scope>runtime</scope>
        </dependency>
        <!-- JDBC -->   
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>4.1.4.RELEASE</version>
        </dependency>
        
        <!-- MySQL connector/j -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.16</version>
        </dependency>
        
        <!-- Mybatise설정  -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
        <version>3.2.8</version>
            </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.2.2</version>
        </dependency>
        
        <!-- 파일 업로드 라이브러리 추가 -->
       <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        
        <!-- ajax쓰기 위해서-->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.10</version>
        </dependency>
        
        <!-- DBCP 커넥션 풀: BasicDataSource 사용하기 위해  -->           
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.6</version>
        </dependency>
        
        <!-- tx 사용하기위해! 버전을 맞춰 줘야한다.  -->       
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>aopalliance</groupId>
            <artifactId>aopalliance</artifactId>
            <version>1.0</version>
        </dependency>
        
        <!-- 자동 메일 발송  -->  
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.5</version>
        </dependency>
        
        <!--@data 등을 위한 롬복-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.10</version> <!--버전은 그때 맞춰서-->
        </dependency>
        
        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${org.springframework-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${org.springframework-version}</version>
        </dependency> 
        
    </dependencies>
    <build>
    	<!-- 빌드 컴파일 시 java 소스가 class파일로 변환 및 xml같은 리소스 파일이 컴파일될 수 있도로 지정. java파일은 필요없으니 필터로 제외하기 -->
    	<sourceDirectory>${basedir}/src/main/java</sourceDirectory>
    	<resources>		    
		    <resource>      
		    	<directory>${basedir}/src/main/java</directory>
		    	<filtering>true</filtering>
		    	<excludes>
		    		<exclude>**/*.java</exclude>
		    	</excludes>
			</resource>
		</resources>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                 <version>1.4.0</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
            <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-install-plugin</artifactId>
                 <version>2.3.1</version>
            </plugin>
            <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-resources-plugin</artifactId>
                  <version>2.5</version>
                  <configuration>
                      <encoding>UTF-8</encoding>
                  </configuration>
              </plugin>
              <plugin>
                   <groupId>org.apache.maven.plugins</groupId>
                   <artifactId>maven-war-plugin</artifactId>
                   <version>2.4</version>
                   <configuration>
                       <filtering>true</filtering> 
                       <excludes>**/node_modules/**, *.zip, **/scss/**, **/devjs/**, **/gulpfile.js, **/package.json </excludes>
                   </configuration>
               </plugin>
        </plugins>
        <extensions>
             <extension>
		        <groupId>org.apache.maven.wagon</groupId>
		        <artifactId>wagon-ftp</artifactId>
		        <version>2.10</version>
		      </extension>
         </extensions>
    </build>
    <profiles>
         <profile>
             <id>makeFile</id>
             <activation>
             </activation>
             <build>
                <plugins>
                    <plugin>
	                    <groupId>org.codehaus.mojo</groupId>
	                    <artifactId>exec-maven-plugin</artifactId>
	                    <version>1.6.0</version>
	                    <executions>
	                        <execution>
	                           <id>gulp-js</id>
                               <phase>process-sources</phase>
                               <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gulp</executable>
                                    <workingDirectory>src/main/webapp/node_modules/.bin</workingDirectory>
                                    <arguments>
                                        <argument>js</argument>
                                    </arguments>
                                </configuration>
	                        </execution>
	                        <execution>
                               <id>gulp-css</id>
                               <phase>process-sources</phase>
                               <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gulp</executable>
                                    <workingDirectory>src/main/webapp/node_modules/.bin</workingDirectory>
                                    <arguments>
                                        <argument>css</argument>
                                    </arguments>
                                </configuration>
                            </execution>
	                    </executions>
                    </plugin>
                    <plugin>
		                  <groupId>org.codehaus.mojo</groupId>
		                  <artifactId>wagon-maven-plugin</artifactId>
		                  <version>1.0</version>
		                  <executions>
		                    <execution>
		                      <id>upload-to-myserver</id>
		                      <phase>install</phase>
		                      <goals>
		                        <goal>upload-single</goal>
		                      </goals>
		                      <!-- 
		                      	배포를 위해 Maven setting.xml servers란에 id pw 추가!
		                      	<server>
								  <id>upload-to-myserve</id>
								  <username>my_username</username>
								  <password>my_password</password>
								</server>
								
								암호화를 위해 1가지 더 추가 
		                      	mvn -'-'encrypt-master-password 비번 
		                      	
		                      	위 암호를 ~/.m2/settings-security.xml를 만든 후 에 다음 형식으로 붙여 넣는다.
		                      	<settingsSecurity>
								  <master>{p+6Gtyvs480HQa1cRcJ0aPFG3rerLgnf5RlqOgwuKf0=}</master>
								</settingsSecurity>
								
								mvn '-'-encrypt-password <password> 실행 후 암호를 위 password에 저장
								
		                      -->
		                      <configuration>
		                        <serverId>upload-to-myserver</serverId>
		                        <fromFile>${project.build.directory}/${project.build.finalName}.war</fromFile>
		                        <url>ftp://tomcat.honbabzone.com/</url>
		                        <toFile>testProject.war</toFile>
		                      </configuration>
		                    </execution>
		                  </executions>
		                </plugin>
                </plugins>
             </build>
         </profile>
     </profiles>
</project>
